{"ast":null,"code":"import * as i0 from \"@angular/core\";\nexport class FormService {\n  constructor() {\n    this.tab = [];\n  }\n  addFormulaire(formulaire) {\n    this.tab.push(formulaire);\n  }\n  getFormulaire() {\n    return this.tab;\n  }\n  deleteFormulaire(formulaire) {\n    const index = this.tab.indexOf(formulaire, 0);\n    if (index > -1) {\n      this.tab.splice(index, 1);\n    }\n  }\n  updateFormulaire(formulaire) {\n    this.deleteFormulaire(formulaire);\n    this.addFormulaire(formulaire);\n  }\n}\nFormService.ɵfac = function FormService_Factory(t) {\n  return new (t || FormService)();\n};\nFormService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: FormService,\n  factory: FormService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":";AAMA,OAAM,MAAOA,WAAW;EAItBC;IAFM,QAAG,GAAkB,EAAE;EAEb;EAEhBC,aAAa,CAACC,UAAsB;IAClC,IAAI,CAACC,GAAG,CAACC,IAAI,CAACF,UAAU,CAAC;EAC3B;EAEAG,aAAa;IACX,OAAO,IAAI,CAACF,GAAG;EACjB;EAEAG,gBAAgB,CAACJ,UAAsB;IACrC,MAAMK,KAAK,GAAG,IAAI,CAACJ,GAAG,CAACK,OAAO,CAACN,UAAU,EAAE,CAAC,CAAC;IAC7C,IAAIK,KAAK,GAAG,CAAC,CAAC,EAAE;MACd,IAAI,CAACJ,GAAG,CAACM,MAAM,CAACF,KAAK,EAAE,CAAC,CAAC;;EAE7B;EAEAG,gBAAgB,CAACR,UAAsB;IACrC,IAAI,CAACI,gBAAgB,CAACJ,UAAU,CAAC;IACjC,IAAI,CAACD,aAAa,CAACC,UAAU,CAAC;EAChC;;AAxBWH,WAAW;mBAAXA,WAAW;AAAA;AAAXA,WAAW;SAAXA,WAAW;EAAAY,SAAXZ,WAAW;EAAAa,YAFV;AAAM","names":["FormService","constructor","addFormulaire","formulaire","tab","push","getFormulaire","deleteFormulaire","index","indexOf","splice","updateFormulaire","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\chebb\\Desktop\\porto\\protfolio_project\\src\\app\\form.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { Formulaire } from './models/formulaire';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class FormService {\n\nprivate tab : Formulaire[] = [];\n\n  constructor() { }\n\n  addFormulaire(formulaire: Formulaire) {\n    this.tab.push(formulaire);\n  }\n\n  getFormulaire() {\n    return this.tab;\n  }\n\n  deleteFormulaire(formulaire: Formulaire) {\n    const index = this.tab.indexOf(formulaire, 0);\n    if (index > -1) {\n      this.tab.splice(index, 1);\n    }\n  }\n\n  updateFormulaire(formulaire: Formulaire) {\n    this.deleteFormulaire(formulaire);\n    this.addFormulaire(formulaire);\n  }\n\n\n\n\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}